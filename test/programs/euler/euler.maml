;; Solutions for problems 1, 5 & 6 from Project Euler

;; Euler problem 1
fun euler1_helper (n, acc) =
    if n > 0
    then if (n % 3 == 0) || (n % 5 == 0)
         then euler1_helper (n - 1) (acc + n)
         else euler1_helper (n - 1) acc
    else acc;
    
fun euler1 n = euler1_helper (n - 1) 0;

;; Euler problem 2
;; May not work due to too much recursion
fun euler5_check (n, divisor, acc) =
    if divisor > 0
    then if (n % divisor) == 0
         then euler5_check n (divisor - 1) acc
         else euler5_check n (divisor - 1) (acc + 1)
    else acc == 0;
    
fun euler5_helper (n, divisor) = if euler5_check n divisor 0
                                 then n
                                 else euler5_helper (n + 1) divisor;
                                 
fun euler5 n = euler5_helper n n;

;; Euler problem 6
fun euler6_helper (n, squaresum, sum) =
    if n > 0
    then euler6_helper (n - 1) (squaresum + (n * n)) (sum + n)
    else (sum * sum) - squaresum;
    
fun euler6 n = euler6_helper n 0 0;